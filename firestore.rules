rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Bookmarked words collection
    match /bookmarkedWords/{docId} {
      // Allow read if the document belongs to the authenticated user
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Allow create if the user is authenticated and they're setting their own userId
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      
      // Allow delete if the document belongs to the authenticated user
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Allow update if the document belongs to the authenticated user and they're not changing the userId
      allow update: if isAuthenticated() 
        && resource.data.userId == request.auth.uid 
        && request.resource.data.userId == request.auth.uid;
    }

    // User data and subcollections
    match /users/{userId} {
      // Allow users to read/write their own user document
      allow read, write: if isOwner(userId);

      // Rules for user conversations subcollection
      match /conversations/{conversationId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Temp Emails collection
    match /tempEmails/{emailId} {
      // Allow read if the document belongs to the authenticated user
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Allow create if the user is authenticated and they're setting their own userId
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      
      // Allow delete if the document belongs to the authenticated user
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Không cho phép cập nhật, chỉ cho phép tạo mới và xóa
      allow update: if false;
    }

    // Expenses collection
    match /expenses/{expenseId} {
      // Allow read if the document belongs to the authenticated user
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Allow create if the user is authenticated and they're setting their own userId
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      
      // Allow delete if the document belongs to the authenticated user
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Allow update if the document belongs to the authenticated user and they're not changing the userId
      allow update: if isAuthenticated() 
        && resource.data.userId == request.auth.uid 
        && request.resource.data.userId == request.auth.uid;
    }

    // User Settings collection
    match /userSettings/{userId} {
      // Allow read if the document belongs to the authenticated user
      allow read: if isAuthenticated() && userId == request.auth.uid;
      
      // Allow create if the user is authenticated and they're creating their own settings
      allow create: if isAuthenticated() && userId == request.auth.uid;
      
      // Allow update if the document belongs to the authenticated user
      allow update: if isAuthenticated() && userId == request.auth.uid;
      
      // Không cho phép xóa settings
      allow delete: if false;
    }

    // Wallets collection
    match /wallets/{userId} {
      // Allow read if the document belongs to the authenticated user
      allow read: if isAuthenticated() && userId == request.auth.uid;
      
      // Allow create if the user is authenticated and they're creating their own wallet
      allow create: if isAuthenticated() && userId == request.auth.uid;
      
      // Allow update if the document belongs to the authenticated user
      allow update: if isAuthenticated() && userId == request.auth.uid;
      
      // Không cho phép xóa ví
      allow delete: if false;
    }
    
    // Workouts collection
    match /workouts/{workoutId} {
      // Allow read if the document belongs to the authenticated user
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Allow create if the user is authenticated and they're setting their own userId
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      
      // Allow delete if the document belongs to the authenticated user
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Allow update if the document belongs to the authenticated user and they're not changing the userId
      allow update: if isAuthenticated() 
        && resource.data.userId == request.auth.uid 
        && request.resource.data.userId == request.auth.uid;
    }
    
    // Workout progress collection to track history
    match /workoutProgress/{progressId} {
      // Allow read if the document belongs to the authenticated user
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Allow create if the user is authenticated and they're setting their own userId
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      
      // Allow update if the document belongs to the authenticated user
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Don't allow deletion of workout history to maintain records
      allow delete: if false;
    }

    // Mặc định chặn tất cả các truy cập khác
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 